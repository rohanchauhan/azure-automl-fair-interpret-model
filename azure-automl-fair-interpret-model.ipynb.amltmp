{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Training an Azure AutoML model with Explanations\r\n",
        "We are using credit risk modelling dataset from Kaggle for the task. In this project, we train an AutoML model using Azure AutoML and after selecting the model,\r\n",
        " we assess it's fairness and interpretablity."
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Install Required Packages"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install azureml-explain-model azureml-interpret azureml-sdk"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: azureml-explain-model in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (1.32.0)\n",
            "Requirement already satisfied: azureml-interpret in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (1.32.0)\n",
            "Requirement already satisfied: azureml-sdk in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (1.32.0)\n",
            "Requirement already satisfied: interpret-community==0.18.* in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-interpret) (0.18.1)\n",
            "Requirement already satisfied: azureml-core~=1.32.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-interpret) (1.32.0)\n",
            "Requirement already satisfied: azureml-train-automl-client~=1.32.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-sdk) (1.32.0)\n",
            "Requirement already satisfied: azureml-train~=1.32.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-sdk) (1.32.0)\n",
            "Requirement already satisfied: azureml-pipeline~=1.32.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-sdk) (1.32.0)\n",
            "Requirement already satisfied: azureml-dataset-runtime[fuse]~=1.32.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-sdk) (1.32.0)\n",
            "Requirement already satisfied: scikit-learn in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from interpret-community==0.18.*->azureml-interpret) (0.22.2.post1)\n",
            "Requirement already satisfied: shap<=0.39.0,>=0.20.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from interpret-community==0.18.*->azureml-interpret) (0.39.0)\n",
            "Requirement already satisfied: packaging in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from interpret-community==0.18.*->azureml-interpret) (20.9)\n",
            "Requirement already satisfied: numpy in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from interpret-community==0.18.*->azureml-interpret) (1.18.5)\n",
            "Requirement already satisfied: pandas in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from interpret-community==0.18.*->azureml-interpret) (0.25.3)\n",
            "Requirement already satisfied: interpret-core[required]<=0.2.4,>=0.1.20 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from interpret-community==0.18.*->azureml-interpret) (0.2.4)\n",
            "Requirement already satisfied: scipy in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from interpret-community==0.18.*->azureml-interpret) (1.5.2)\n",
            "Requirement already satisfied: requests<3.0.0,>=2.19.1 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (2.25.1)\n",
            "Requirement already satisfied: urllib3<=1.26.5,>=1.23 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (1.25.11)\n",
            "Requirement already satisfied: python-dateutil<3.0.0,>=2.7.3 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (2.8.1)\n",
            "Requirement already satisfied: contextlib2<1.0.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (0.6.0.post1)\n",
            "Requirement already satisfied: azure-graphrbac<1.0.0,>=0.40.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (0.61.1)\n",
            "Requirement already satisfied: msrestazure<=0.6.4,>=0.4.33 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (0.6.4)\n",
            "Requirement already satisfied: jmespath<1.0.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (0.10.0)\n",
            "Requirement already satisfied: azure-mgmt-authorization<1.0.0,>=0.40.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (0.61.0)\n",
            "Requirement already satisfied: pathspec<1.0.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (0.8.1)\n",
            "Requirement already satisfied: docker<5.0.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (4.4.4)\n",
            "Requirement already satisfied: cryptography!=1.9,!=2.0.*,!=2.1.*,!=2.2.*,<4.0.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (3.4.7)\n",
            "Requirement already satisfied: azure-common<2.0.0,>=1.1.12 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (1.1.27)\n",
            "Requirement already satisfied: ndg-httpsclient<=0.5.1 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (0.5.1)\n",
            "Requirement already satisfied: azure-mgmt-resource<15.0.0,>=1.2.1 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (13.0.0)\n",
            "Requirement already satisfied: pyopenssl<21.0.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (20.0.1)\n",
            "Requirement already satisfied: azure-mgmt-containerregistry>=2.0.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (8.0.0)\n",
            "Requirement already satisfied: PyJWT<3.0.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (2.1.0)\n",
            "Requirement already satisfied: jsonpickle<3.0.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (2.0.0)\n",
            "Requirement already satisfied: backports.tempfile in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (1.0)\n",
            "Requirement already satisfied: msrest<1.0.0,>=0.5.1 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (0.6.21)\n",
            "Requirement already satisfied: pytz in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (2021.1)\n",
            "Requirement already satisfied: azure-mgmt-storage<16.0.0,>=1.5.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (11.2.0)\n",
            "Requirement already satisfied: adal<=1.2.7,>=1.2.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (1.2.7)\n",
            "Requirement already satisfied: ruamel.yaml<0.17.5,>=0.15.35 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (0.17.4)\n",
            "Requirement already satisfied: azure-mgmt-keyvault<10.0.0,>=0.40.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (9.0.0)\n",
            "Requirement already satisfied: SecretStorage<4.0.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-core~=1.32.0->azureml-interpret) (3.3.1)\n",
            "Requirement already satisfied: azureml-automl-core~=1.32.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-train-automl-client~=1.32.0->azureml-sdk) (1.32.0)\n",
            "Requirement already satisfied: azureml-telemetry~=1.32.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-train-automl-client~=1.32.0->azureml-sdk) (1.32.0)\n",
            "Requirement already satisfied: azureml-train-core~=1.32.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-train~=1.32.0->azureml-sdk) (1.32.0)\n",
            "Requirement already satisfied: azureml-pipeline-core~=1.32.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-pipeline~=1.32.0->azureml-sdk) (1.32.0)\n",
            "Requirement already satisfied: azureml-pipeline-steps~=1.32.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-pipeline~=1.32.0->azureml-sdk) (1.32.0)\n",
            "Requirement already satisfied: azureml-dataprep<2.19.0a,>=2.18.0a in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-dataset-runtime[fuse]~=1.32.0->azureml-sdk) (2.18.0)\n",
            "Requirement already satisfied: pyarrow<4.0.0,>=0.17.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-dataset-runtime[fuse]~=1.32.0->azureml-sdk) (3.0.0)\n",
            "Requirement already satisfied: fusepy<4.0.0,>=3.0.1; extra == \"fuse\" in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-dataset-runtime[fuse]~=1.32.0->azureml-sdk) (3.0.1)\n",
            "Requirement already satisfied: joblib>=0.11 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from scikit-learn->interpret-community==0.18.*->azureml-interpret) (0.14.1)\n",
            "Requirement already satisfied: slicer==0.0.7 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from shap<=0.39.0,>=0.20.0->interpret-community==0.18.*->azureml-interpret) (0.0.7)\n",
            "Requirement already satisfied: numba in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from shap<=0.39.0,>=0.20.0->interpret-community==0.18.*->azureml-interpret) (0.53.1)\n",
            "Requirement already satisfied: tqdm>4.25.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from shap<=0.39.0,>=0.20.0->interpret-community==0.18.*->azureml-interpret) (4.61.0)\n",
            "Requirement already satisfied: cloudpickle in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from shap<=0.39.0,>=0.20.0->interpret-community==0.18.*->azureml-interpret) (1.6.0)\n",
            "Requirement already satisfied: pyparsing>=2.0.2 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from packaging->interpret-community==0.18.*->azureml-interpret) (2.4.7)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from requests<3.0.0,>=2.19.1->azureml-core~=1.32.0->azureml-interpret) (2.10)\n",
            "Requirement already satisfied: chardet<5,>=3.0.2 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from requests<3.0.0,>=2.19.1->azureml-core~=1.32.0->azureml-interpret) (4.0.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from requests<3.0.0,>=2.19.1->azureml-core~=1.32.0->azureml-interpret) (2021.5.30)\n",
            "Requirement already satisfied: six>=1.5 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from python-dateutil<3.0.0,>=2.7.3->azureml-core~=1.32.0->azureml-interpret) (1.16.0)\n",
            "Requirement already satisfied: websocket-client>=0.32.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from docker<5.0.0->azureml-core~=1.32.0->azureml-interpret) (1.0.1)\n",
            "Requirement already satisfied: cffi>=1.12 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from cryptography!=1.9,!=2.0.*,!=2.1.*,!=2.2.*,<4.0.0->azureml-core~=1.32.0->azureml-interpret) (1.14.5)\n",
            "Requirement already satisfied: pyasn1>=0.1.1 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from ndg-httpsclient<=0.5.1->azureml-core~=1.32.0->azureml-interpret) (0.4.8)\n",
            "Requirement already satisfied: azure-mgmt-core<2.0.0,>=1.2.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azure-mgmt-containerregistry>=2.0.0->azureml-core~=1.32.0->azureml-interpret) (1.2.2)\n",
            "Requirement already satisfied: importlib-metadata; python_version < \"3.8\" in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from jsonpickle<3.0.0->azureml-core~=1.32.0->azureml-interpret) (4.4.0)\n",
            "Requirement already satisfied: backports.weakref in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from backports.tempfile->azureml-core~=1.32.0->azureml-interpret) (1.0.post1)\n",
            "Requirement already satisfied: isodate>=0.6.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from msrest<1.0.0,>=0.5.1->azureml-core~=1.32.0->azureml-interpret) (0.6.0)\n",
            "Requirement already satisfied: requests-oauthlib>=0.5.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from msrest<1.0.0,>=0.5.1->azureml-core~=1.32.0->azureml-interpret) (1.3.0)\n",
            "Requirement already satisfied: ruamel.yaml.clib>=0.1.2; platform_python_implementation == \"CPython\" and python_version < \"3.10\" in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from ruamel.yaml<0.17.5,>=0.15.35->azureml-core~=1.32.0->azureml-interpret) (0.2.2)\n",
            "Requirement already satisfied: jeepney>=0.6 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from SecretStorage<4.0.0->azureml-core~=1.32.0->azureml-interpret) (0.6.0)\n",
            "Requirement already satisfied: applicationinsights in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-telemetry~=1.32.0->azureml-train-automl-client~=1.32.0->azureml-sdk) (0.11.10)\n",
            "Requirement already satisfied: azureml-train-restclients-hyperdrive~=1.32.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-train-core~=1.32.0->azureml-train~=1.32.0->azureml-sdk) (1.32.0)\n",
            "Requirement already satisfied: azureml-dataprep-rslex<1.17.0a,>=1.16.0dev0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-dataprep<2.19.0a,>=2.18.0a->azureml-dataset-runtime[fuse]~=1.32.0->azureml-sdk) (1.16.1)\n",
            "Requirement already satisfied: azure-identity<1.5.0,>=1.2.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-dataprep<2.19.0a,>=2.18.0a->azureml-dataset-runtime[fuse]~=1.32.0->azureml-sdk) (1.4.1)\n",
            "Requirement already satisfied: azureml-dataprep-native<37.0.0,>=36.0.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-dataprep<2.19.0a,>=2.18.0a->azureml-dataset-runtime[fuse]~=1.32.0->azureml-sdk) (36.0.0)\n",
            "Requirement already satisfied: dotnetcore2<3.0.0,>=2.1.14 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azureml-dataprep<2.19.0a,>=2.18.0a->azureml-dataset-runtime[fuse]~=1.32.0->azureml-sdk) (2.1.20)\n",
            "Requirement already satisfied: llvmlite<0.37,>=0.36.0rc1 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from numba->shap<=0.39.0,>=0.20.0->interpret-community==0.18.*->azureml-interpret) (0.36.0)\n",
            "Requirement already satisfied: setuptools in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from numba->shap<=0.39.0,>=0.20.0->interpret-community==0.18.*->azureml-interpret) (50.3.0)\n",
            "Requirement already satisfied: pycparser in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from cffi>=1.12->cryptography!=1.9,!=2.0.*,!=2.1.*,!=2.2.*,<4.0.0->azureml-core~=1.32.0->azureml-interpret) (2.20)\n",
            "Requirement already satisfied: azure-core<2.0.0,>=1.9.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azure-mgmt-core<2.0.0,>=1.2.0->azure-mgmt-containerregistry>=2.0.0->azureml-core~=1.32.0->azureml-interpret) (1.14.0)\n",
            "Requirement already satisfied: zipp>=0.5 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from importlib-metadata; python_version < \"3.8\"->jsonpickle<3.0.0->azureml-core~=1.32.0->azureml-interpret) (3.4.1)\n",
            "Requirement already satisfied: typing-extensions>=3.6.4; python_version < \"3.8\" in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from importlib-metadata; python_version < \"3.8\"->jsonpickle<3.0.0->azureml-core~=1.32.0->azureml-interpret) (3.10.0.0)\n",
            "Requirement already satisfied: oauthlib>=3.0.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from requests-oauthlib>=0.5.0->msrest<1.0.0,>=0.5.1->azureml-core~=1.32.0->azureml-interpret) (3.1.1)\n",
            "Requirement already satisfied: msal-extensions~=0.2.2 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azure-identity<1.5.0,>=1.2.0->azureml-dataprep<2.19.0a,>=2.18.0a->azureml-dataset-runtime[fuse]~=1.32.0->azureml-sdk) (0.2.2)\n",
            "Requirement already satisfied: msal<2.0.0,>=1.3.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from azure-identity<1.5.0,>=1.2.0->azureml-dataprep<2.19.0a,>=2.18.0a->azureml-dataset-runtime[fuse]~=1.32.0->azureml-sdk) (1.12.0)\n",
            "Requirement already satisfied: distro>=1.2.0 in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from dotnetcore2<3.0.0,>=2.1.14->azureml-dataprep<2.19.0a,>=2.18.0a->azureml-dataset-runtime[fuse]~=1.32.0->azureml-sdk) (1.5.0)\n",
            "Requirement already satisfied: portalocker~=1.0; platform_system != \"Windows\" in /anaconda/envs/azureml_py36/lib/python3.6/site-packages (from msal-extensions~=0.2.2->azure-identity<1.5.0,>=1.2.0->azureml-dataprep<2.19.0a,>=2.18.0a->azureml-dataset-runtime[fuse]~=1.32.0->azureml-sdk) (1.7.1)\n"
          ]
        }
      ],
      "execution_count": 1,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Get Data"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.core import Workspace, Datastore, Dataset\r\n",
        "\r\n",
        "# Get Workspace\r\n",
        "ws = Workspace.from_config()\r\n",
        "\r\n",
        "# Datastore Params\r\n",
        "datastore_name = 'rohands'\r\n",
        "storage_account_name = 'rohansa'\r\n",
        "container_name ='rohan-blob'\r\n",
        "# account_key = Add your account key for storage account\r\n",
        "\r\n",
        "# Get Datastore otherwise create new datastore and register blob storage\r\n",
        "if datastore_name in ws.datastores:\r\n",
        "    blob_ds = Datastore.get(ws, datastore_name=datastore_name)\r\n",
        "else:\r\n",
        "    try:\r\n",
        "        blob_ds = Datastore.register_azure_blob_container(\r\n",
        "            workspace=ws,\r\n",
        "            datastore_name=datastore_name,\r\n",
        "            account_name=storage_account_name,\r\n",
        "            #account_key = account_key\r\n",
        "            container_name=container_name\r\n",
        "        )\r\n",
        "    except Exception as ex:\r\n",
        "        print(ex)\r\n",
        "\r\n",
        "# Set as Default Datastore\r\n",
        "default_ds = ws.set_default_datastore(datastore_name)\r\n",
        "default_ds = ws.get_default_datastore()\r\n",
        "\r\n",
        "# Get Dataset otherise create new dataset and register\r\n",
        "dataset_name = 'credit risk dataset'\r\n",
        "\r\n",
        "if dataset_name not in ws.datasets:\r\n",
        "    default_ds.upload_files(\r\n",
        "        files=['./data/credit_risk_dataset.csv'],\r\n",
        "        target_path='credit-risk-data/',\r\n",
        "        overwrite=True,\r\n",
        "        show_progress=True)\r\n",
        "    \r\n",
        "    tab_dataset = Dataset.Tabular.from_delimited_files(\r\n",
        "        path=(default_ds,'credit-risk-data/*.csv'))\r\n",
        "        \r\n",
        "    try:\r\n",
        "        tab_dataset = tab_dataset.register(workspace=ws, \r\n",
        "                                name=dataset_name,\r\n",
        "                                description='credit risk data from Kaggle',\r\n",
        "                                tags = {'format':'CSV'},\r\n",
        "                                create_new_version=True)\r\n",
        "        print('Dataset registered.')\r\n",
        "    except Exception as ex:\r\n",
        "        print(ex)\r\n",
        "else:\r\n",
        "    tab_dataset = Dataset.get_by_name(ws, dataset_name)\r\n",
        "    print('Dataset already registered.')\r\n",
        "\r\n",
        "train_ds, test_ds = tab_dataset.random_split(percentage=0.7, seed=999)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Dataset already registered.\n"
          ]
        }
      ],
      "execution_count": 2,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1625637110772
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##### Compute Target"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.core.compute import ComputeTarget, AmlCompute\r\n",
        "from azureml.core.compute_target import ComputeTargetException\r\n",
        "\r\n",
        "# Compute params\r\n",
        "compute_name = 'rohan-vm-cluster'\r\n",
        "training_cluster = None\r\n",
        "\r\n",
        "if compute_name in ws.compute_targets:\r\n",
        "    training_cluster = ComputeTarget(ws, compute_name)\r\n",
        "    print(\"Using existing cluster.\")\r\n",
        "else:\r\n",
        "    try:\r\n",
        "        compute_config = AmlCompute.provisioning_configuration(\r\n",
        "            vm_size ='STANDARD_DS11_V2', \r\n",
        "            max_nodes=2 )\r\n",
        "        training_cluster = ComputeTarget.create(ws, compute_name, compute_config)\r\n",
        "        training_cluster.wait_for_completion(show_output=True)\r\n",
        "    except Exception as ex:\r\n",
        "        print(ex)\r\n",
        "    print(\"Cluster created.\")"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Using existing cluster.\n"
          ]
        }
      ],
      "execution_count": 3,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1625637112108
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Configure and Run AML"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from azureml.train.automl import AutoMLConfig\n",
        "from azureml.core.experiment import Experiment\n",
        "from azureml.widgets import RunDetails\n",
        "\n",
        "# Configuration\n",
        "automl_config = AutoMLConfig(name='Automated Credit Risk Modelling',\n",
        "                             task='classification',\n",
        "                             compute_target=training_cluster,\n",
        "                             training_data = train_ds,\n",
        "                             validation_data = test_ds,\n",
        "                             label_column_name='loan_status',\n",
        "                             iterations=10,\n",
        "                             primary_metric = 'AUC_weighted',\n",
        "                             max_concurrent_iterations=2,\n",
        "                             featurization='auto'\n",
        "                             )\n",
        "\n",
        "\n",
        "# Run the Experiment\n",
        "automl_experiment = Experiment(ws, 'azure-automl-fair-interpret-model')\n",
        "automl_run = automl_experiment.submit(automl_config)\n",
        "RunDetails(automl_run).show()\n",
        "automl_run.wait_for_completion()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Submitting remote run.\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<IPython.core.display.HTML object>",
            "text/html": "<table style=\"width:100%\"><tr><th>Experiment</th><th>Id</th><th>Type</th><th>Status</th><th>Details Page</th><th>Docs Page</th></tr><tr><td>azure-automl-fair-interpret-model</td><td>AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e</td><td>automl</td><td>NotStarted</td><td><a href=\"https://ml.azure.com/runs/AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e?wsid=/subscriptions/23416925-66df-470c-b651-f378856d8ad7/resourcegroups/rohan-rg/workspaces/rohan-ws&amp;tid=13715ad3-e049-4909-899b-f9e22f99b1a5\" target=\"_blank\" rel=\"noopener\">Link to Azure Machine Learning studio</a></td><td><a href=\"https://docs.microsoft.com/en-us/python/api/overview/azure/ml/intro?view=azure-ml-py\" target=\"_blank\" rel=\"noopener\">Link to Documentation</a></td></tr></table>"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "_AutoMLWidget(widget_settings={'childWidgetDisplay': 'popup', 'send_telemetry': False, 'log_level': 'INFO', 's…",
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "7116852c2500496ca1e4b515bff9baf6"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "application/aml.mini.widget.v1": "{\"status\": \"Completed\", \"workbench_run_details_uri\": \"https://ml.azure.com/runs/AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e?wsid=/subscriptions/23416925-66df-470c-b651-f378856d8ad7/resourcegroups/rohan-rg/workspaces/rohan-ws&tid=13715ad3-e049-4909-899b-f9e22f99b1a5\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"run_properties\": {\"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"created_utc\": \"2021-07-07T05:51:58.377488Z\", \"properties\": {\"num_iterations\": \"10\", \"training_type\": \"TrainFull\", \"acquisition_function\": \"EI\", \"primary_metric\": \"AUC_weighted\", \"train_split\": \"0\", \"acquisition_parameter\": \"0\", \"num_cross_validation\": null, \"target\": \"rohan-vm-cluster\", \"AMLSettingsJsonString\": \"{\\\"path\\\":null,\\\"name\\\":\\\"Automated Credit Risk Modelling\\\",\\\"subscription_id\\\":\\\"23416925-66df-470c-b651-f378856d8ad7\\\",\\\"resource_group\\\":\\\"rohan-rg\\\",\\\"workspace_name\\\":\\\"rohan-ws\\\",\\\"region\\\":\\\"centralindia\\\",\\\"compute_target\\\":\\\"rohan-vm-cluster\\\",\\\"spark_service\\\":null,\\\"azure_service\\\":\\\"remote\\\",\\\"many_models\\\":false,\\\"pipeline_fetch_max_batch_size\\\":1,\\\"enable_batch_run\\\":false,\\\"enable_run_restructure\\\":false,\\\"start_auxiliary_runs_before_parent_complete\\\":false,\\\"enable_code_generation\\\":false,\\\"iterations\\\":10,\\\"primary_metric\\\":\\\"AUC_weighted\\\",\\\"task_type\\\":\\\"classification\\\",\\\"data_script\\\":null,\\\"test_size\\\":0.0,\\\"validation_size\\\":0.0,\\\"n_cross_validations\\\":null,\\\"y_min\\\":null,\\\"y_max\\\":null,\\\"num_classes\\\":null,\\\"featurization\\\":\\\"auto\\\",\\\"_ignore_package_version_incompatibilities\\\":false,\\\"is_timeseries\\\":false,\\\"max_cores_per_iteration\\\":1,\\\"max_concurrent_iterations\\\":2,\\\"iteration_timeout_minutes\\\":null,\\\"mem_in_mb\\\":null,\\\"enforce_time_on_windows\\\":false,\\\"experiment_timeout_minutes\\\":8640,\\\"experiment_exit_score\\\":null,\\\"whitelist_models\\\":null,\\\"blacklist_algos\\\":[\\\"TensorFlowLinearClassifier\\\",\\\"TensorFlowDNN\\\"],\\\"supported_models\\\":[\\\"SGD\\\",\\\"DecisionTree\\\",\\\"GradientBoosting\\\",\\\"ExtremeRandomTrees\\\",\\\"RandomForest\\\",\\\"LightGBM\\\",\\\"TensorFlowDNN\\\",\\\"LinearSVM\\\",\\\"XGBoostClassifier\\\",\\\"KNN\\\",\\\"BernoulliNaiveBayes\\\",\\\"LogisticRegression\\\",\\\"MultinomialNaiveBayes\\\",\\\"AveragedPerceptronClassifier\\\",\\\"SVM\\\",\\\"TensorFlowLinearClassifier\\\"],\\\"private_models\\\":[],\\\"auto_blacklist\\\":true,\\\"blacklist_samples_reached\\\":false,\\\"exclude_nan_labels\\\":true,\\\"verbosity\\\":20,\\\"_debug_log\\\":\\\"azureml_automl.log\\\",\\\"show_warnings\\\":false,\\\"model_explainability\\\":true,\\\"service_url\\\":null,\\\"sdk_url\\\":null,\\\"sdk_packages\\\":null,\\\"enable_onnx_compatible_models\\\":false,\\\"enable_split_onnx_featurizer_estimator_models\\\":false,\\\"vm_type\\\":\\\"STANDARD_DS11_V2\\\",\\\"telemetry_verbosity\\\":20,\\\"send_telemetry\\\":true,\\\"enable_dnn\\\":false,\\\"scenario\\\":\\\"SDK-1.13.0\\\",\\\"environment_label\\\":null,\\\"save_mlflow\\\":false,\\\"force_text_dnn\\\":false,\\\"enable_feature_sweeping\\\":true,\\\"enable_early_stopping\\\":false,\\\"early_stopping_n_iters\\\":10,\\\"metrics\\\":null,\\\"enable_metric_confidence\\\":false,\\\"enable_ensembling\\\":true,\\\"enable_stack_ensembling\\\":true,\\\"ensemble_iterations\\\":10,\\\"enable_tf\\\":false,\\\"enable_subsampling\\\":false,\\\"subsample_seed\\\":null,\\\"enable_nimbusml\\\":false,\\\"enable_streaming\\\":false,\\\"force_streaming\\\":false,\\\"track_child_runs\\\":true,\\\"allowed_private_models\\\":[],\\\"label_column_name\\\":\\\"loan_status\\\",\\\"weight_column_name\\\":null,\\\"cv_split_column_names\\\":null,\\\"enable_local_managed\\\":false,\\\"_local_managed_run_id\\\":null,\\\"cost_mode\\\":1,\\\"lag_length\\\":0,\\\"metric_operation\\\":\\\"maximize\\\",\\\"preprocess\\\":true}\", \"DataPrepJsonString\": \"{\\\\\\\"training_data\\\\\\\": {\\\\\\\"datasetId\\\\\\\": \\\\\\\"4059c99b-771a-4bdd-aff1-fc3651196631\\\\\\\"}, \\\\\\\"validation_data\\\\\\\": {\\\\\\\"datasetId\\\\\\\": \\\\\\\"6ecb0aae-0bb9-4e46-83e3-fedfcded3434\\\\\\\"}, \\\\\\\"datasets\\\\\\\": 0}\", \"EnableSubsampling\": \"False\", \"runTemplate\": \"AutoML\", \"azureml.runsource\": \"automl\", \"display_task_type\": \"classification\", \"dependencies_versions\": \"{\\\"azureml-widgets\\\": \\\"1.30.0\\\", \\\"azureml-train\\\": \\\"1.32.0\\\", \\\"azureml-train-restclients-hyperdrive\\\": \\\"1.32.0\\\", \\\"azureml-train-core\\\": \\\"1.32.0\\\", \\\"azureml-train-automl\\\": \\\"1.30.0\\\", \\\"azureml-train-automl-runtime\\\": \\\"1.30.0\\\", \\\"azureml-train-automl-client\\\": \\\"1.32.0\\\", \\\"azureml-tensorboard\\\": \\\"1.30.0\\\", \\\"azureml-telemetry\\\": \\\"1.32.0\\\", \\\"azureml-sdk\\\": \\\"1.32.0\\\", \\\"azureml-samples\\\": \\\"0+unknown\\\", \\\"azureml-pipeline\\\": \\\"1.32.0\\\", \\\"azureml-pipeline-steps\\\": \\\"1.32.0\\\", \\\"azureml-pipeline-core\\\": \\\"1.32.0\\\", \\\"azureml-opendatasets\\\": \\\"1.30.0\\\", \\\"azureml-model-management-sdk\\\": \\\"1.0.1b6.post1\\\", \\\"azureml-mlflow\\\": \\\"1.30.0\\\", \\\"azureml-interpret\\\": \\\"1.32.0\\\", \\\"azureml-explain-model\\\": \\\"1.32.0\\\", \\\"azureml-defaults\\\": \\\"1.30.0\\\", \\\"azureml-dataset-runtime\\\": \\\"1.32.0\\\", \\\"azureml-dataprep\\\": \\\"2.18.0\\\", \\\"azureml-dataprep-rslex\\\": \\\"1.16.1\\\", \\\"azureml-dataprep-native\\\": \\\"36.0.0\\\", \\\"azureml-datadrift\\\": \\\"1.30.0\\\", \\\"azureml-core\\\": \\\"1.32.0\\\", \\\"azureml-contrib-services\\\": \\\"1.30.0\\\", \\\"azureml-contrib-server\\\": \\\"1.30.0\\\", \\\"azureml-contrib-reinforcementlearning\\\": \\\"1.30.0\\\", \\\"azureml-contrib-pipeline-steps\\\": \\\"1.30.0\\\", \\\"azureml-contrib-notebook\\\": \\\"1.30.0\\\", \\\"azureml-contrib-fairness\\\": \\\"1.32.0\\\", \\\"azureml-contrib-dataset\\\": \\\"1.30.0\\\", \\\"azureml-cli-common\\\": \\\"1.30.0\\\", \\\"azureml-automl-runtime\\\": \\\"1.30.0\\\", \\\"azureml-automl-dnn-nlp\\\": \\\"1.30.0\\\", \\\"azureml-automl-core\\\": \\\"1.32.0\\\", \\\"azureml-accel-models\\\": \\\"1.30.0\\\"}\", \"_aml_system_scenario_identification\": \"Remote.Parent\", \"ClientType\": \"SDK\", \"environment_cpu_name\": \"AzureML-AutoML\", \"environment_cpu_label\": \"prod\", \"environment_gpu_name\": \"AzureML-AutoML-GPU\", \"environment_gpu_label\": \"prod\", \"root_attribution\": \"automl\", \"attribution\": \"AutoML\", \"Orchestrator\": \"AutoML\", \"CancelUri\": \"https://centralindia.api.azureml.ms/jasmine/v1.0/subscriptions/23416925-66df-470c-b651-f378856d8ad7/resourceGroups/rohan-rg/providers/Microsoft.MachineLearningServices/workspaces/rohan-ws/experimentids/926e10e6-dadc-4009-a8ed-5e96cd895976/cancel/AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"azureml.git.repository_uri\": \"https://github.com/rohanchauhan/azure-automl-fair-interpret-model.git\", \"mlflow.source.git.repoURL\": \"https://github.com/rohanchauhan/azure-automl-fair-interpret-model.git\", \"azureml.git.branch\": \"main\", \"mlflow.source.git.branch\": \"main\", \"azureml.git.commit\": \"1022297ad825043ddc9da2c965ea6ab628300298\", \"mlflow.source.git.commit\": \"1022297ad825043ddc9da2c965ea6ab628300298\", \"azureml.git.dirty\": \"True\", \"ClientSdkVersion\": \"1.31.0\", \"snapshotId\": \"00000000-0000-0000-0000-000000000000\", \"SetupRunId\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_setup\", \"SetupRunContainerId\": \"dcid.AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_setup\", \"FeaturizationRunJsonPath\": \"featurizer_container.json\", \"FeaturizationRunId\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_featurize\", \"ProblemInfoJsonString\": \"{\\\"dataset_num_categorical\\\": 0, \\\"is_sparse\\\": true, \\\"subsampling\\\": false, \\\"has_extra_col\\\": true, \\\"dataset_classes\\\": 2, \\\"dataset_features\\\": 55, \\\"dataset_samples\\\": 22852, \\\"single_frequency_class_detected\\\": false}\", \"ModelExplainRunId\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_ModelExplain\"}, \"tags\": {\"model_explain_run\": \"best_run\", \"_aml_system_azureml.automlComponent\": \"AutoML\", \"pipeline_id\": \"\", \"score\": \"\", \"predicted_cost\": \"\", \"fit_time\": \"\", \"training_percent\": \"\", \"iteration\": \"\", \"run_preprocessor\": \"\", \"run_algorithm\": \"\", \"automl_best_child_run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_9\", \"model_explain_best_run_child_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_9\"}, \"end_time_utc\": \"2021-07-07T06:05:06.797881Z\", \"status\": \"Completed\", \"log_files\": {}, \"log_groups\": [], \"run_duration\": \"0:13:08\", \"run_number\": \"30\", \"run_queued_details\": {\"status\": \"Completed\", \"details\": null}}, \"child_runs\": [{\"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_0\", \"run_number\": 34, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-07T06:00:15.978442Z\", \"end_time\": \"2021-07-07T06:00:51.939575Z\", \"created_time\": \"2021-07-07T05:59:09.504037Z\", \"created_time_dt\": \"2021-07-07T05:59:09.504037Z\", \"duration\": \"0:01:42\", \"iteration\": \"0\", \"goal\": \"AUC_weighted_max\", \"run_name\": \"MaxAbsScaler, LightGBM\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.948568, \"best_metric\": 0.948568}, {\"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_1\", \"run_number\": 35, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-07T05:59:23.872574Z\", \"end_time\": \"2021-07-07T05:59:58.625039Z\", \"created_time\": \"2021-07-07T05:59:09.518661Z\", \"created_time_dt\": \"2021-07-07T05:59:09.518661Z\", \"duration\": \"0:00:49\", \"iteration\": \"1\", \"goal\": \"AUC_weighted_max\", \"run_name\": \"MaxAbsScaler, XGBoostClassifier\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.92926943, \"best_metric\": 0.948568}, {\"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_2\", \"run_number\": 36, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-07T06:00:58.411413Z\", \"end_time\": \"2021-07-07T06:02:38.412075Z\", \"created_time\": \"2021-07-07T05:59:59.872276Z\", \"created_time_dt\": \"2021-07-07T05:59:59.872276Z\", \"duration\": \"0:02:38\", \"iteration\": \"2\", \"goal\": \"AUC_weighted_max\", \"run_name\": \"MaxAbsScaler, RandomForest\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.89320588, \"best_metric\": 0.948568}, {\"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_3\", \"run_number\": 37, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-07T06:01:05.532057Z\", \"end_time\": \"2021-07-07T06:01:39.331634Z\", \"created_time\": \"2021-07-07T06:00:53.157158Z\", \"created_time_dt\": \"2021-07-07T06:00:53.157158Z\", \"duration\": \"0:00:46\", \"iteration\": \"3\", \"goal\": \"AUC_weighted_max\", \"run_name\": \"MaxAbsScaler, RandomForest\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.89072154, \"best_metric\": 0.948568}, {\"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_4\", \"run_number\": 38, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-07T06:01:53.446357Z\", \"end_time\": \"2021-07-07T06:02:29.859351Z\", \"created_time\": \"2021-07-07T06:01:41.339235Z\", \"created_time_dt\": \"2021-07-07T06:01:41.339235Z\", \"duration\": \"0:00:48\", \"iteration\": \"4\", \"goal\": \"AUC_weighted_max\", \"run_name\": \"MaxAbsScaler, RandomForest\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.86439186, \"best_metric\": 0.948568}, {\"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_5\", \"run_number\": 39, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-07T06:02:45.176757Z\", \"end_time\": \"2021-07-07T06:03:18.977584Z\", \"created_time\": \"2021-07-07T06:02:31.943987Z\", \"created_time_dt\": \"2021-07-07T06:02:31.943987Z\", \"duration\": \"0:00:47\", \"iteration\": \"5\", \"goal\": \"AUC_weighted_max\", \"run_name\": \"MaxAbsScaler, ExtremeRandomTrees\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.84457187, \"best_metric\": 0.948568}, {\"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_6\", \"run_number\": 40, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-07T06:02:55.849906Z\", \"end_time\": \"2021-07-07T06:03:27.467462Z\", \"created_time\": \"2021-07-07T06:02:40.40542Z\", \"created_time_dt\": \"2021-07-07T06:02:40.40542Z\", \"duration\": \"0:00:47\", \"iteration\": \"6\", \"goal\": \"AUC_weighted_max\", \"run_name\": \"MaxAbsScaler, ExtremeRandomTrees\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.86420368, \"best_metric\": 0.948568}, {\"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_7\", \"run_number\": 41, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-07T06:03:33.007257Z\", \"end_time\": \"2021-07-07T06:04:12.195716Z\", \"created_time\": \"2021-07-07T06:03:20.989792Z\", \"created_time_dt\": \"2021-07-07T06:03:20.989792Z\", \"duration\": \"0:00:51\", \"iteration\": \"7\", \"goal\": \"AUC_weighted_max\", \"run_name\": \"MaxAbsScaler, ExtremeRandomTrees\", \"run_properties\": \"copy=True\", \"primary_metric\": 0.83844682, \"best_metric\": 0.948568}, {\"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_8\", \"run_number\": 42, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-07T06:04:28.025752Z\", \"end_time\": \"2021-07-07T06:05:05.112472Z\", \"created_time\": \"2021-07-07T06:04:12.884616Z\", \"created_time_dt\": \"2021-07-07T06:04:12.884616Z\", \"duration\": \"0:00:52\", \"iteration\": \"8\", \"goal\": \"AUC_weighted_max\", \"run_name\": \"VotingEnsemble\", \"run_properties\": \"\\n    estimators=[('0', Pipeline(memory=None,\\n             steps=[('maxabsscaler', MaxAbsScaler(copy=True\", \"primary_metric\": 0.94778042, \"best_metric\": 0.948568}, {\"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_9\", \"run_number\": 43, \"metric\": null, \"status\": \"Completed\", \"run_type\": \"azureml.scriptrun\", \"training_percent\": \"100\", \"start_time\": \"2021-07-07T06:04:21.500523Z\", \"end_time\": \"2021-07-07T06:05:02.188288Z\", \"created_time\": \"2021-07-07T06:04:12.911402Z\", \"created_time_dt\": \"2021-07-07T06:04:12.911402Z\", \"duration\": \"0:00:49\", \"iteration\": \"9\", \"goal\": \"AUC_weighted_max\", \"run_name\": \"StackEnsemble\", \"run_properties\": \"\\n    base_learners=[('0', Pipeline(memory=None,\\n             steps=[('maxabsscaler', MaxAbsScaler(copy=True\", \"primary_metric\": 0.94910434, \"best_metric\": 0.94910434}], \"children_metrics\": {\"categories\": [0], \"series\": {\"average_precision_score_micro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"average_precision_score_micro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9773617221992242, 0.964631387863947, 0.9355558839085942, 0.9006618492070959, 0.9093267561852811, 0.9049559839580549, 0.9155823430880627, 0.8985198717697797, 0.9765068786346927, 0.9782965517888021]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"average_precision_score_micro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9773617221992242, 0.9773617221992242, 0.9773617221992242, 0.9773617221992242, 0.9773617221992242, 0.9773617221992242, 0.9773617221992242, 0.9773617221992242, 0.9773617221992242, 0.9782965517888021]}], \"recall_score_micro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"recall_score_micro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.937814780552986, 0.923835954363244, 0.8776852708397574, 0.8237228903278857, 0.8295816630691746, 0.8318429437763388, 0.8369822181108028, 0.8165279062596361, 0.9376092095796074, 0.9366841401994038]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"recall_score_micro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986]}], \"f1_score_micro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"f1_score_micro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.937814780552986, 0.9238359543632441, 0.8776852708397574, 0.8237228903278857, 0.8295816630691746, 0.8318429437763389, 0.8369822181108028, 0.8165279062596361, 0.9376092095796074, 0.9366841401994038]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"f1_score_micro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986]}], \"balanced_accuracy\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"balanced_accuracy\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.861109061770182, 0.8399815995493665, 0.7506974474904851, 0.8175436738091737, 0.6116780862035877, 0.6874021405089068, 0.6586990576078043, 0.6035210723481044, 0.8604620550680062, 0.8650302333174649]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"balanced_accuracy_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.861109061770182, 0.861109061770182, 0.861109061770182, 0.861109061770182, 0.861109061770182, 0.861109061770182, 0.861109061770182, 0.861109061770182, 0.861109061770182, 0.8650302333174649]}], \"accuracy\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"accuracy\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.937814780552986, 0.923835954363244, 0.8776852708397574, 0.8237228903278857, 0.8295816630691746, 0.8318429437763388, 0.8369822181108028, 0.8165279062596361, 0.9376092095796074, 0.9366841401994038]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"accuracy_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986]}], \"recall_score_macro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"recall_score_macro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.861109061770182, 0.8399815995493665, 0.7506974474904851, 0.8175436738091737, 0.6116780862035877, 0.6874021405089068, 0.6586990576078043, 0.6035210723481044, 0.8604620550680062, 0.8650302333174649]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"recall_score_macro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.861109061770182, 0.861109061770182, 0.861109061770182, 0.861109061770182, 0.861109061770182, 0.861109061770182, 0.861109061770182, 0.861109061770182, 0.861109061770182, 0.8650302333174649]}], \"weighted_accuracy\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"weighted_accuracy\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9771716886334301, 0.9668607533863721, 0.942841404830818, 0.8268933821816251, 0.9413857264582723, 0.9059540205965493, 0.9284574571353618, 0.9258195016685821, 0.9771926137502698, 0.9734490160327477]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"weighted_accuracy_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9771716886334301, 0.9771716886334301, 0.9771716886334301, 0.9771716886334301, 0.9771716886334301, 0.9771716886334301, 0.9771716886334301, 0.9771716886334301, 0.9771926137502698, 0.9771926137502698]}], \"AUC_macro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"AUC_macro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9485679987936582, 0.9292694279597122, 0.8932058844055402, 0.8907215431703359, 0.8643918566945736, 0.844571867063131, 0.864203677348441, 0.8384468162796319, 0.9477804183812586, 0.9491043410856578]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"AUC_macro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9485679987936582, 0.9485679987936582, 0.9485679987936582, 0.9485679987936582, 0.9485679987936582, 0.9485679987936582, 0.9485679987936582, 0.9485679987936582, 0.9485679987936582, 0.9491043410856578]}], \"precision_score_weighted\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"precision_score_weighted\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9407831530108983, 0.9249327932590012, 0.8751560626367396, 0.8584136861620386, 0.8482220262940259, 0.8176105723470679, 0.8292094157160343, 0.8058046822888618, 0.9406520880694881, 0.9380332425725024]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"precision_score_weighted_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9407831530108983, 0.9407831530108983, 0.9407831530108983, 0.9407831530108983, 0.9407831530108983, 0.9407831530108983, 0.9407831530108983, 0.9407831530108983, 0.9407831530108983, 0.9407831530108983]}], \"precision_score_micro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"precision_score_micro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.937814780552986, 0.923835954363244, 0.8776852708397574, 0.8237228903278857, 0.8295816630691746, 0.8318429437763388, 0.8369822181108028, 0.8165279062596361, 0.9376092095796074, 0.9366841401994038]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"precision_score_micro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986]}], \"average_precision_score_macro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"average_precision_score_macro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.942607227596187, 0.9238691259626512, 0.8745527919863016, 0.8663434214813281, 0.8372092116885891, 0.7705701844691447, 0.8263672596439802, 0.7805163252342769, 0.9418946611137202, 0.9430682061279827]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"average_precision_score_macro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.942607227596187, 0.942607227596187, 0.942607227596187, 0.942607227596187, 0.942607227596187, 0.942607227596187, 0.942607227596187, 0.942607227596187, 0.942607227596187, 0.9430682061279827]}], \"norm_macro_recall\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"norm_macro_recall\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.722218123540364, 0.6799631990987329, 0.5013948949809701, 0.6350873476183474, 0.2233561724071753, 0.3748042810178136, 0.3173981152156087, 0.20704214469620874, 0.7209241101360124, 0.7300604666349297]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"norm_macro_recall_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.722218123540364, 0.722218123540364, 0.722218123540364, 0.722218123540364, 0.722218123540364, 0.722218123540364, 0.722218123540364, 0.722218123540364, 0.722218123540364, 0.7300604666349297]}], \"f1_score_macro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"f1_score_macro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8982230971041926, 0.8751870954215433, 0.7883391470317231, 0.7724560208413984, 0.6338817928965268, 0.7123220792365529, 0.690512173248746, 0.6214618442696518, 0.8978008318078745, 0.8977596971494759]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"f1_score_macro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8982230971041926, 0.8982230971041926, 0.8982230971041926, 0.8982230971041926, 0.8982230971041926, 0.8982230971041926, 0.8982230971041926, 0.8982230971041926, 0.8982230971041926, 0.8982230971041926]}], \"f1_score_weighted\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"f1_score_weighted\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.934232737999692, 0.9193907589874382, 0.8663491545141693, 0.8337253696278695, 0.7857259632160605, 0.8175103508670868, 0.8112903261837066, 0.7756098391325847, 0.9339837100888682, 0.9335458042946619]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"f1_score_weighted_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.934232737999692, 0.934232737999692, 0.934232737999692, 0.934232737999692, 0.934232737999692, 0.934232737999692, 0.934232737999692, 0.934232737999692, 0.934232737999692, 0.934232737999692]}], \"log_loss\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"log_loss\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.18762578108432748, 0.23308193816568437, 0.33155356369950384, 0.4818868532038595, 0.39021101392546137, 0.382468179768876, 0.37287583199094404, 0.40978522554908586, 0.19068216227944249, 0.19378121292204054]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"log_loss_min\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.18762578108432748, 0.18762578108432748, 0.18762578108432748, 0.18762578108432748, 0.18762578108432748, 0.18762578108432748, 0.18762578108432748, 0.18762578108432748, 0.18762578108432748, 0.18762578108432748]}], \"precision_score_macro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"precision_score_macro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9557034149373274, 0.9303863553001589, 0.8664536311701219, 0.7521659046921775, 0.8804918395430705, 0.7653842040504282, 0.8109393576169176, 0.7856062273077347, 0.955836216808776, 0.9457250772802819]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"precision_score_macro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9557034149373274, 0.9557034149373274, 0.9557034149373274, 0.9557034149373274, 0.9557034149373274, 0.9557034149373274, 0.9557034149373274, 0.9557034149373274, 0.955836216808776, 0.955836216808776]}], \"recall_score_weighted\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"recall_score_weighted\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.937814780552986, 0.923835954363244, 0.8776852708397574, 0.8237228903278857, 0.8295816630691746, 0.8318429437763388, 0.8369822181108028, 0.8165279062596361, 0.9376092095796074, 0.9366841401994038]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"recall_score_weighted_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986, 0.937814780552986]}], \"AUC_weighted\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"AUC_weighted\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.948567998793658, 0.9292694279597122, 0.8932058844055402, 0.8907215431703361, 0.8643918566945736, 0.8445718670631311, 0.864203677348441, 0.8384468162796319, 0.9477804183812586, 0.9491043410856578]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"AUC_weighted_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.948567998793658, 0.948567998793658, 0.948567998793658, 0.948567998793658, 0.948567998793658, 0.948567998793658, 0.948567998793658, 0.948567998793658, 0.948567998793658, 0.9491043410856578]}], \"matthews_correlation\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"matthews_correlation\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.8113165414645166, 0.7650449437756452, 0.6061979543283506, 0.5659458906481006, 0.4122746679399677, 0.44602048336955424, 0.4442782147572887, 0.34389686198157227, 0.8107074922197689, 0.8067295183766771]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"matthews_correlation_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.8113165414645166, 0.8113165414645166, 0.8113165414645166, 0.8113165414645166, 0.8113165414645166, 0.8113165414645166, 0.8113165414645166, 0.8113165414645166, 0.8113165414645166, 0.8113165414645166]}], \"AUC_micro\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"AUC_micro\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9771106683802441, 0.9649003885659053, 0.9378092868277236, 0.9019073590784723, 0.9124875766534468, 0.911258725395942, 0.9186798502127355, 0.9012644241850648, 0.9763337816741391, 0.9780331493706605]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"AUC_micro_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9771106683802441, 0.9771106683802441, 0.9771106683802441, 0.9771106683802441, 0.9771106683802441, 0.9771106683802441, 0.9771106683802441, 0.9771106683802441, 0.9771106683802441, 0.9780331493706605]}], \"average_precision_score_weighted\": [{\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"markers\", \"name\": \"average_precision_score_weighted\", \"stepped\": false, \"type\": \"scatter\", \"data\": [0.9652968861261935, 0.9529856458648004, 0.9240426455125372, 0.9191733200280156, 0.9005197856971143, 0.8670773725201034, 0.8965623834850774, 0.8714988732433533, 0.9648228357260632, 0.9656133079969178]}, {\"categories\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"mode\": \"lines\", \"name\": \"average_precision_score_weighted_max\", \"stepped\": true, \"type\": \"scatter\", \"data\": [0.9652968861261935, 0.9652968861261935, 0.9652968861261935, 0.9652968861261935, 0.9652968861261935, 0.9652968861261935, 0.9652968861261935, 0.9652968861261935, 0.9652968861261935, 0.9656133079969178]}]}, \"metricName\": null, \"primaryMetricName\": \"AUC_weighted\", \"showLegend\": false}, \"run_metrics\": [{\"name\": \"experiment_status\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], \"series\": [{\"data\": [\"DatasetEvaluation\", \"FeaturesGeneration\", \"DatasetFeaturization\", \"DatasetFeaturizationCompleted\", \"ModelSelection\", \"BestRunExplainModel\", \"ModelExplanationDataSetSetup\", \"PickSurrogateModel\", \"EngineeredFeatureExplanations\", \"EngineeredFeatureExplanations\", \"RawFeaturesExplanations\", \"RawFeaturesExplanations\", \"BestRunExplainModel\"]}]}, {\"name\": \"experiment_status_description\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], \"series\": [{\"data\": [\"Gathering dataset statistics.\", \"Generating features for the dataset.\", \"Beginning to fit featurizers and featurize the dataset.\", \"Completed fit featurizers and featurizing the dataset.\", \"Beginning model selection.\", \"Best run model explanations started\", \"Model explanations data setup completed\", \"Choosing LightGBM as the surrogate model for explanations\", \"Computation of engineered features started\", \"Computation of engineered features completed\", \"Computation of raw features started\", \"Computation of raw features completed\", \"Best run model explanations completed\"]}]}, {\"name\": \"average_precision_score_micro\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.9782965517888021]}]}, {\"name\": \"AUC_micro\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.9780331493706605]}]}, {\"name\": \"balanced_accuracy\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.8650302333174649]}]}, {\"name\": \"precision_score_micro\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.9366841401994038]}]}, {\"name\": \"f1_score_macro\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.8977596971494759]}]}, {\"name\": \"average_precision_score_weighted\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.9656133079969178]}]}, {\"name\": \"accuracy\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.9366841401994038]}]}, {\"name\": \"f1_score_weighted\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.9335458042946619]}]}, {\"name\": \"AUC_weighted\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.9491043410856578]}]}, {\"name\": \"average_precision_score_macro\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.9430682061279827]}]}, {\"name\": \"recall_score_micro\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.9366841401994038]}]}, {\"name\": \"norm_macro_recall\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.7300604666349297]}]}, {\"name\": \"weighted_accuracy\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.9734490160327477]}]}, {\"name\": \"recall_score_macro\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.8650302333174649]}]}, {\"name\": \"precision_score_macro\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.9457250772802819]}]}, {\"name\": \"f1_score_micro\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.9366841401994038]}]}, {\"name\": \"precision_score_weighted\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.9380332425725024]}]}, {\"name\": \"matthews_correlation\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.8067295183766771]}]}, {\"name\": \"recall_score_weighted\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.9366841401994038]}]}, {\"name\": \"AUC_macro\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.9491043410856578]}]}, {\"name\": \"log_loss\", \"run_id\": \"AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e\", \"categories\": [0], \"series\": [{\"data\": [0.19378121292204054]}]}], \"run_logs\": \"\\nRun is completed.\", \"graph\": {}, \"widget_settings\": {\"childWidgetDisplay\": \"popup\", \"send_telemetry\": false, \"log_level\": \"INFO\", \"sdk_version\": \"1.32.0\"}, \"loading\": false}"
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "execution_count": 4,
          "data": {
            "text/plain": "{'runId': 'AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e',\n 'target': 'rohan-vm-cluster',\n 'status': 'Completed',\n 'startTimeUtc': '2021-07-07T05:52:13.544026Z',\n 'endTimeUtc': '2021-07-07T06:05:06.797881Z',\n 'properties': {'num_iterations': '10',\n  'training_type': 'TrainFull',\n  'acquisition_function': 'EI',\n  'primary_metric': 'AUC_weighted',\n  'train_split': '0',\n  'acquisition_parameter': '0',\n  'num_cross_validation': None,\n  'target': 'rohan-vm-cluster',\n  'AMLSettingsJsonString': '{\"path\":null,\"name\":\"Automated Credit Risk Modelling\",\"subscription_id\":\"23416925-66df-470c-b651-f378856d8ad7\",\"resource_group\":\"rohan-rg\",\"workspace_name\":\"rohan-ws\",\"region\":\"centralindia\",\"compute_target\":\"rohan-vm-cluster\",\"spark_service\":null,\"azure_service\":\"remote\",\"many_models\":false,\"pipeline_fetch_max_batch_size\":1,\"enable_batch_run\":false,\"enable_run_restructure\":false,\"start_auxiliary_runs_before_parent_complete\":false,\"enable_code_generation\":false,\"iterations\":10,\"primary_metric\":\"AUC_weighted\",\"task_type\":\"classification\",\"data_script\":null,\"test_size\":0.0,\"validation_size\":0.0,\"n_cross_validations\":null,\"y_min\":null,\"y_max\":null,\"num_classes\":null,\"featurization\":\"auto\",\"_ignore_package_version_incompatibilities\":false,\"is_timeseries\":false,\"max_cores_per_iteration\":1,\"max_concurrent_iterations\":2,\"iteration_timeout_minutes\":null,\"mem_in_mb\":null,\"enforce_time_on_windows\":false,\"experiment_timeout_minutes\":8640,\"experiment_exit_score\":null,\"whitelist_models\":null,\"blacklist_algos\":[\"TensorFlowLinearClassifier\",\"TensorFlowDNN\"],\"supported_models\":[\"SGD\",\"DecisionTree\",\"GradientBoosting\",\"ExtremeRandomTrees\",\"RandomForest\",\"LightGBM\",\"TensorFlowDNN\",\"LinearSVM\",\"XGBoostClassifier\",\"KNN\",\"BernoulliNaiveBayes\",\"LogisticRegression\",\"MultinomialNaiveBayes\",\"AveragedPerceptronClassifier\",\"SVM\",\"TensorFlowLinearClassifier\"],\"private_models\":[],\"auto_blacklist\":true,\"blacklist_samples_reached\":false,\"exclude_nan_labels\":true,\"verbosity\":20,\"_debug_log\":\"azureml_automl.log\",\"show_warnings\":false,\"model_explainability\":true,\"service_url\":null,\"sdk_url\":null,\"sdk_packages\":null,\"enable_onnx_compatible_models\":false,\"enable_split_onnx_featurizer_estimator_models\":false,\"vm_type\":\"STANDARD_DS11_V2\",\"telemetry_verbosity\":20,\"send_telemetry\":true,\"enable_dnn\":false,\"scenario\":\"SDK-1.13.0\",\"environment_label\":null,\"save_mlflow\":false,\"force_text_dnn\":false,\"enable_feature_sweeping\":true,\"enable_early_stopping\":false,\"early_stopping_n_iters\":10,\"metrics\":null,\"enable_metric_confidence\":false,\"enable_ensembling\":true,\"enable_stack_ensembling\":true,\"ensemble_iterations\":10,\"enable_tf\":false,\"enable_subsampling\":false,\"subsample_seed\":null,\"enable_nimbusml\":false,\"enable_streaming\":false,\"force_streaming\":false,\"track_child_runs\":true,\"allowed_private_models\":[],\"label_column_name\":\"loan_status\",\"weight_column_name\":null,\"cv_split_column_names\":null,\"enable_local_managed\":false,\"_local_managed_run_id\":null,\"cost_mode\":1,\"lag_length\":0,\"metric_operation\":\"maximize\",\"preprocess\":true}',\n  'DataPrepJsonString': '{\\\\\"training_data\\\\\": {\\\\\"datasetId\\\\\": \\\\\"4059c99b-771a-4bdd-aff1-fc3651196631\\\\\"}, \\\\\"validation_data\\\\\": {\\\\\"datasetId\\\\\": \\\\\"6ecb0aae-0bb9-4e46-83e3-fedfcded3434\\\\\"}, \\\\\"datasets\\\\\": 0}',\n  'EnableSubsampling': 'False',\n  'runTemplate': 'AutoML',\n  'azureml.runsource': 'automl',\n  'display_task_type': 'classification',\n  'dependencies_versions': '{\"azureml-widgets\": \"1.30.0\", \"azureml-train\": \"1.32.0\", \"azureml-train-restclients-hyperdrive\": \"1.32.0\", \"azureml-train-core\": \"1.32.0\", \"azureml-train-automl\": \"1.30.0\", \"azureml-train-automl-runtime\": \"1.30.0\", \"azureml-train-automl-client\": \"1.32.0\", \"azureml-tensorboard\": \"1.30.0\", \"azureml-telemetry\": \"1.32.0\", \"azureml-sdk\": \"1.32.0\", \"azureml-samples\": \"0+unknown\", \"azureml-pipeline\": \"1.32.0\", \"azureml-pipeline-steps\": \"1.32.0\", \"azureml-pipeline-core\": \"1.32.0\", \"azureml-opendatasets\": \"1.30.0\", \"azureml-model-management-sdk\": \"1.0.1b6.post1\", \"azureml-mlflow\": \"1.30.0\", \"azureml-interpret\": \"1.32.0\", \"azureml-explain-model\": \"1.32.0\", \"azureml-defaults\": \"1.30.0\", \"azureml-dataset-runtime\": \"1.32.0\", \"azureml-dataprep\": \"2.18.0\", \"azureml-dataprep-rslex\": \"1.16.1\", \"azureml-dataprep-native\": \"36.0.0\", \"azureml-datadrift\": \"1.30.0\", \"azureml-core\": \"1.32.0\", \"azureml-contrib-services\": \"1.30.0\", \"azureml-contrib-server\": \"1.30.0\", \"azureml-contrib-reinforcementlearning\": \"1.30.0\", \"azureml-contrib-pipeline-steps\": \"1.30.0\", \"azureml-contrib-notebook\": \"1.30.0\", \"azureml-contrib-fairness\": \"1.32.0\", \"azureml-contrib-dataset\": \"1.30.0\", \"azureml-cli-common\": \"1.30.0\", \"azureml-automl-runtime\": \"1.30.0\", \"azureml-automl-dnn-nlp\": \"1.30.0\", \"azureml-automl-core\": \"1.32.0\", \"azureml-accel-models\": \"1.30.0\"}',\n  '_aml_system_scenario_identification': 'Remote.Parent',\n  'ClientType': 'SDK',\n  'environment_cpu_name': 'AzureML-AutoML',\n  'environment_cpu_label': 'prod',\n  'environment_gpu_name': 'AzureML-AutoML-GPU',\n  'environment_gpu_label': 'prod',\n  'root_attribution': 'automl',\n  'attribution': 'AutoML',\n  'Orchestrator': 'AutoML',\n  'CancelUri': 'https://centralindia.api.azureml.ms/jasmine/v1.0/subscriptions/23416925-66df-470c-b651-f378856d8ad7/resourceGroups/rohan-rg/providers/Microsoft.MachineLearningServices/workspaces/rohan-ws/experimentids/926e10e6-dadc-4009-a8ed-5e96cd895976/cancel/AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e',\n  'azureml.git.repository_uri': 'https://github.com/rohanchauhan/azure-automl-fair-interpret-model.git',\n  'mlflow.source.git.repoURL': 'https://github.com/rohanchauhan/azure-automl-fair-interpret-model.git',\n  'azureml.git.branch': 'main',\n  'mlflow.source.git.branch': 'main',\n  'azureml.git.commit': '1022297ad825043ddc9da2c965ea6ab628300298',\n  'mlflow.source.git.commit': '1022297ad825043ddc9da2c965ea6ab628300298',\n  'azureml.git.dirty': 'True',\n  'ClientSdkVersion': '1.31.0',\n  'snapshotId': '00000000-0000-0000-0000-000000000000',\n  'SetupRunId': 'AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_setup',\n  'SetupRunContainerId': 'dcid.AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_setup',\n  'FeaturizationRunJsonPath': 'featurizer_container.json',\n  'FeaturizationRunId': 'AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_featurize',\n  'ProblemInfoJsonString': '{\"dataset_num_categorical\": 0, \"is_sparse\": true, \"subsampling\": false, \"has_extra_col\": true, \"dataset_classes\": 2, \"dataset_features\": 55, \"dataset_samples\": 22852, \"single_frequency_class_detected\": false}',\n  'ModelExplainRunId': 'AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_ModelExplain'},\n 'inputDatasets': [{'dataset': {'id': '4059c99b-771a-4bdd-aff1-fc3651196631'}, 'consumptionDetails': {'type': 'RunInput', 'inputName': 'training_data', 'mechanism': 'Direct'}}, {'dataset': {'id': '6ecb0aae-0bb9-4e46-83e3-fedfcded3434'}, 'consumptionDetails': {'type': 'RunInput', 'inputName': 'validation_data', 'mechanism': 'Direct'}}],\n 'outputDatasets': [],\n 'logFiles': {},\n 'submittedBy': 'Aishwarya Singh'}"
          },
          "metadata": {}
        }
      ],
      "execution_count": 4,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1625637911387
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "####  Get Best Run"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "best_run, fitted_model = automl_run.get_output()\r\n",
        "print(best_run)\r\n",
        "\r\n",
        "print('\\nBest Model Definition:')\r\n",
        "print(fitted_model)\r\n",
        "\r\n",
        "print('\\nBest Run Transformations:')\r\n",
        "for step in fitted_model.named_steps:\r\n",
        "    print(step)\r\n",
        "    \r\n",
        "print('\\nBest Run Metrics:')\r\n",
        "best_run_metrics = best_run.get_metrics()\r\n",
        "for metric_name in best_run_metrics:\r\n",
        "    metric = best_run_metrics[metric_name]\r\n",
        "    print(metric_name, metric)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Run(Experiment: azure-automl-fair-interpret-model,\n",
            "Id: AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_9,\n",
            "Type: azureml.scriptrun,\n",
            "Status: Completed)\n",
            "\n",
            "Best Model Definition:\n",
            "Pipeline(memory=None,\n",
            "         steps=[('datatransformer',\n",
            "                 DataTransformer(enable_dnn=False, enable_feature_sweeping=True, feature_sweeping_config={}, feature_sweeping_timeout=86400, featurization_config=None, force_text_dnn=False, is_cross_validation=False, is_onnx_compatible=False, observer=None, task='classification', working_dir='/mnt/batch/tasks/shared/LS_root/moun...\n",
            "), random_state=0, tree_method='auto'))], verbose=False))], meta_learner=LogisticRegressionCV(Cs=10, class_weight=None, cv=None, dual=False, fit_intercept=True, intercept_scaling=1.0, l1_ratios=None, max_iter=100, multi_class='auto', n_jobs=None, penalty='l2', random_state=None, refit=True, scoring=<azureml.automl.runtime.stack_ensemble_base.Scorer object at 0x7f86d74a1da0>, solver='lbfgs', tol=0.0001, verbose=0), training_cv_folds=5))],\n",
            "         verbose=False)\n",
            "\n",
            "Best Run Transformations:\n",
            "datatransformer\n",
            "stackensembleclassifier\n",
            "\n",
            "Best Run Metrics:\n",
            "log_loss 0.19378121292204054\n",
            "precision_score_macro 0.9457250772802819\n",
            "recall_score_weighted 0.9366841401994038\n",
            "AUC_macro 0.9491043410856578\n",
            "AUC_weighted 0.9491043410856578\n",
            "matthews_correlation 0.8067295183766771\n",
            "precision_score_weighted 0.9380332425725024\n",
            "recall_score_micro 0.9366841401994038\n",
            "average_precision_score_micro 0.9782965517888021\n",
            "f1_score_weighted 0.9335458042946619\n",
            "f1_score_macro 0.8977596971494759\n",
            "f1_score_micro 0.9366841401994038\n",
            "norm_macro_recall 0.7300604666349297\n",
            "balanced_accuracy 0.8650302333174649\n",
            "average_precision_score_weighted 0.9656133079969178\n",
            "average_precision_score_macro 0.9430682061279827\n",
            "recall_score_macro 0.8650302333174649\n",
            "AUC_micro 0.9780331493706605\n",
            "precision_score_micro 0.9366841401994038\n",
            "weighted_accuracy 0.9734490160327477\n",
            "accuracy 0.9366841401994038\n",
            "confusion_matrix aml://artifactId/ExperimentRun/dcid.AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_9/confusion_matrix\n",
            "accuracy_table aml://artifactId/ExperimentRun/dcid.AutoML_f6d8ad0f-c1e1-4a0b-b34b-6ab7dc5c187e_9/accuracy_table\n"
          ]
        }
      ],
      "execution_count": 5,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1625637920694
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Explain Model using PFI Explainer and Get Global Feature Importance Values"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from interpret.ext.blackbox import PFIExplainer\r\n",
        "import matplotlib.pyplot as plt\r\n",
        "\r\n",
        "df = tab_dataset.to_pandas_dataframe()\r\n",
        "features = list(df.columns).remove('loan_status')\r\n",
        "classes = df.loan_status.unique()\r\n",
        "\r\n",
        "X_train = train_ds.to_pandas_dataframe().drop('loan_status', axis=1)\r\n",
        "y_train = train_ds.to_pandas_dataframe().loan_status\r\n",
        "\r\n",
        "X_test = test_ds.to_pandas_dataframe().drop('loan_status', axis=1)\r\n",
        "y_test = test_ds.to_pandas_dataframe().loan_status\r\n",
        "\r\n",
        "pfi_explainer = PFIExplainer(model=fitted_model,\r\n",
        " features=features,\r\n",
        " classes=classes)\r\n",
        "\r\n",
        "# PFIExplainer\r\n",
        "global_explanation = pfi_explainer.explain_global(X_train, y_train)\r\n",
        "global_feature_importance = global_explanation.get_feature_importance_dict()\r\n",
        "\r\n",
        "# Figure\r\n",
        "fig = plt.figure(figsize=(15,5))\r\n",
        "top_n = 5 #len(global_feature_importance)\r\n",
        "plt.bar(range(top_n), list(global_feature_importance.values())[:top_n], align='center')\r\n",
        "plt.xticks(range(top_n), list(global_feature_importance.keys())[:top_n], rotation=15)\r\n",
        "plt.tick_params(labelsize=18)\r\n",
        "\r\n",
        "plt.title(\"Top {} Features\".format(top_n), fontsize=24)\r\n",
        "plt.xlabel(\"Features\", fontsize=22)\r\n",
        "plt.ylabel(\"Feature Importance\", fontsize=22)\r\n",
        "plt.show()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "11it [00:07,  1.41it/s]\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 1080x360 with 1 Axes>",
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "execution_count": 6,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1625637940749
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Register the Model"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Register model\r\n",
        "best_run.register_model(model_path='outputs/model.pkl', model_name='credit_risk_model',\r\n",
        "    tags={'Training context':'Auto ML Credit Risk Model'},\r\n",
        "    properties={'AUC': best_run_metrics['AUC_weighted'], 'Accuracy': best_run_metrics['accuracy']})"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 7,
          "data": {
            "text/plain": "Model(workspace=Workspace.create(name='rohan-ws', subscription_id='23416925-66df-470c-b651-f378856d8ad7', resource_group='rohan-rg'), name=credit_risk_model, id=credit_risk_model:2, version=2, tags={'Training context': 'Auto ML Credit Risk Model'}, properties={'AUC': '0.9491043410856578', 'Accuracy': '0.9366841401994038'})"
          },
          "metadata": {}
        }
      ],
      "execution_count": 7,
      "metadata": {
        "collapsed": true,
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1625637941711
        }
      }
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3-azureml",
      "language": "python",
      "display_name": "Python 3.6 - AzureML"
    },
    "language_info": {
      "name": "python",
      "version": "3.6.9",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "kernel_info": {
      "name": "python3-azureml"
    },
    "nteract": {
      "version": "nteract-front-end@1.0.0"
    },
    "microsoft": {
      "host": {
        "AzureML": {
          "notebookHasBeenCompleted": true
        }
      }
    }
  },
  "nbformat": 4,
  "nbformat_minor": 2
}